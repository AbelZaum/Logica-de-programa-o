programa
{

	inclua biblioteca Tipos --> tp
	inclua biblioteca Texto --> tx
	inclua biblioteca Util --> u
	
	const cadeia loginCorreto = "adm", senhaCorreta = "adm"
	cadeia escolhaMenu = "0"
	cadeia produtos[999], classificacao[999], testeProduto, entradaClassificacao
	inteiro contador = -1, contador1 = -1, quantidadeEstoque[999], quantidadeProduto
	inteiro indice = 0, testeIndice, encontrados
	cadeia produto = "", testeClassificacao = "", teclaEnter = "", resposta = "", resposta1 = ""
	cadeia texto, entradaIndice, entradaQuantidade = "", entradaIndice2, entradaQuantidade2 = ""
	
	funcao login () 
	{
		cadeia usuario_login, usuario_senha
		
		escreva("Informe o login: ")
		leia(usuario_login)

		escreva("Informe a senha: ")
		leia(usuario_senha)

		se (usuario_login == loginCorreto e usuario_senha == senhaCorreta) {
		
		escreva("\nLogin inserido com sucesso!\n")
		}
		
		se (usuario_login != loginCorreto ou usuario_senha != senhaCorreta) {

			escreva("Login ou senha incorretos... Encerrando")
			encerrar ()
		}	
	}
	
	funcao inicio()
	{
		login ()

		enquanto (resposta != "9") {

			
			u.aguarde(2000)
			limpa()

			menu()
			leia(escolhaMenu)

			se (escolhaMenu == "1") {

				inserir()
			
			} senao se (escolhaMenu == "2") {

				atualizar()
			
			} senao se (escolhaMenu == "3") {

				excluir()
			
			} senao se (escolhaMenu == "4") {

				imprimir()
			
			} senao se (escolhaMenu == "5") {
				
				ordemIndice()

			}senao se (escolhaMenu == "6") {	
			
				exibirPorClassificacao() 
			
			
			} senao se (escolhaMenu == "7") {
			    
			    adicionarEstoque()
			    
			} senao se (escolhaMenu == "8") {
			   
			    removerEstoque()
			    
			} senao se (escolhaMenu == "9") {
			    
			    saldoEstoque()
			    
			}
			
			  senao se (escolhaMenu == "10") {
				
				encerrar()
			
			} senao se (escolhaMenu == "") { 
			
				escreva("Opcao invalida")
			
			} senao {

				escreva("Opcao invalida")
				u.aguarde(3000)
	        	limpa()
	        	
			}
		}

		escreva("\nObrigado pela preferencia!\n")
			
	}

	funcao menu() {

		escreva("MENU\n")
		
		escreva("1 - Inserir\n")
		escreva("2 - Atualizar\n")
		escreva("3 - Excluir\n")
		escreva("4 - Exibir todos os produtos\n")
		escreva("5 - Exibir produto por ordem\n")
		escreva("6 - Exibir produto por classificação\n")
		escreva("7 - Adicionar estoque\n")
		escreva("8 - Remover estoque\n")
		escreva("9 - Saldo estoque\n")
		escreva("10 - Encerrar\n")
		escreva("O que deseja fazer? ")
			
	}

	funcao inserir() {

		contador++
																
		faca {
		
			escreva("\nInsira um produto: ")
			leia(produto)
			
			se (produto == "") {

				escreva("Descrição Inválida") 
		 		
			}
	
		} enquanto (produto == "")

		escreva ("\nProduto inserido com sucesso!\n")

		faca {

			escreva("Insira uma classificacao: ")
			escreva("\n(A - primeira linha)")
			escreva("\n(B - linha regular)")
			escreva("\n(C - segunda linha)\n")
			escreva ("A, B ou C: ")
			leia(testeClassificacao)

			testeClassificacao = tx.caixa_alta(testeClassificacao)
			
		} enquanto (testeClassificacao != "A" e testeClassificacao != "B" e testeClassificacao != "C")

		produtos[contador] = produto
		classificacao[contador] = testeClassificacao
		
	}

	funcao atualizar() {

		faca {

			escreva("\nQual indice deseja atualizar? ")
			leia(texto)
	
			
		se (texto == "") {

			escreva("Indice Inválido")

			retorne
			
		}
		
		indice = tp.cadeia_para_inteiro(texto, 10)
			
		
			se (indice < 0 ou indice > contador) {

				escreva("Indice Invalido")
				u.aguarde (2000)
				retorne
			}
		
		} enquanto (indice < 0 ou indice > contador)

		testeProduto = (produtos[indice])

		faca {
		
		escreva(testeProduto + " (indice " + indice + ") = ")
		leia(produtos[indice])
			
		} enquanto (produtos[indice] == "")
		
		escreva ("\nAtualizado com sucesso!\n")
		
	}

	funcao imprimir() {

        contador1 = -1

		se (resposta1 == "D" ou resposta1 == "d") {

			para (inteiro i = contador; i >= 0; i--) {

				se (produtos[i] == "") {
	                
	                contador1++
	                
				} senao {

					escreva("Produto: " + produtos[i] + ", indice " + i + "\nClassificacao: " + classificacao[i] + "\n\n")
					
				}
				
			    se (contador1 == contador) {
			        
			        escreva("Nenhum produto cadastrado\n")
			        
			    }
			}

			enter()

		} senao {
			
			para (inteiro i = 0; i <= contador; i++) {

				se (produtos[i] == "") {
	                
	                contador1++
	                
				} senao {

					escreva("Produto: " + produtos[i] + ", indice " + i + "\nClassificacao: " + classificacao[i] + "\n\n")
					
				}
				
			    se (contador1 == contador) {
			        
			        escreva("Nenhum produto cadastrado\n")
				
			}
				
			}

		enter()
				
		}
	}
	
	funcao ordemIndice() {

		escreva("Deseja exibir os indices de forma crescente ou decrescente? (C/D) ")
		leia(resposta1)

			enquanto (resposta1 != "C" e resposta1 != "c" e resposta1 != "D" e resposta1 != "d") {
			escreva("Resposta inválida. Digite 'C' ou 'D': ")
			leia(resposta1)
			
		}
			imprimir()
	}

	funcao excluir() {
		
		escreva("Qual indice voce quer excluir? ")
		leia(texto)

		se (texto == "") {

			escreva("Indice Inválido")

			retorne
			
		}
		
		indice = tp.cadeia_para_inteiro(texto, 10)

		se (indice <= -1) {

			escreva("Indice Inválido")
			
			retorne
			
		}

		se (produtos[indice] == "") {

			escreva("Indice Inválido")
			
		} senao {

			produtos[indice] = ""

			classificacao[indice] = ""

			escreva ("\nProduto excluido com sucesso!\n")
		
		}
	}

	funcao encerrar() {

		resposta = "9"
		
	}
	funcao exibirPorClassificacao() 
	{
		
		escreva ("\n\nDigite a classificação desejada: ")
		leia(entradaClassificacao)

		entradaClassificacao = tx.caixa_alta(entradaClassificacao)
		encontrados = 0
		
		se (entradaClassificacao == "A" ou entradaClassificacao == "B" ou entradaClassificacao == "C") {
		
			escreva ("\nProdutos com a classificação " + entradaClassificacao + "\n\n")

			para (inteiro i = 0; i <= contador; i++) {

				se (classificacao[i] == entradaClassificacao) {

					escreva ("Produto: " + produtos [i] + ", indice " + i + "\nClassificação " + classificacao [i] + "\n\n")
					encontrados = 1	
				}
				
			}
					 se (encontrados == 0) {

						escreva ("Nenhum produto encontrado na classificação " + entradaClassificacao + "\n\n")	
					}
		} senao {

			escreva("Classificação Invalida!\n")
			
		}
			escreva ("Precione enter para voltar ao menu: ")
			leia (teclaEnter)
		
	}
	
	funcao adicionarEstoque() {
	       
	      escreva("Qual indice você quer inserir uma quantidade? ")
	      leia(entradaIndice)
	      
	      enquanto (entradaIndice == "") {

			se (entradaIndice == "") {
				
				escreva("Índice Inválido!")
			
				escreva("\nPressione enter para voltar ao menu: ")
				leia(teclaEnter)
				
				limpa()
				
				retorne
			}
	
	      }
		
		 testeIndice = tp.cadeia_para_inteiro(entradaIndice, 10)
	         
	      se (testeIndice <= -1 ou testeIndice > contador) {
	          
	          escreva("Indice Inválido!")
	          
	      } senao {	
	           
	          escreva(produtos[testeIndice] + ": Quantas unidades deseja inserir? ")
        	  	leia(entradaQuantidade)
        
		        enquanto (entradaQuantidade == "") {
		            
		            se (entradaQuantidade == "") {
		                
		                escreva ("Unidade Inválida!")
		                
		            }
					escreva("\nDigite a unidade válida: ")
          			 leia(entradaQuantidade)
		        }
		
		         quantidadeProduto = tp.cadeia_para_inteiro(entradaQuantidade, 10)

				se (quantidadeProduto >= 0) {
		
		         quantidadeEstoque[testeIndice] += quantidadeProduto 
		
		         escreva("Quantidade atual: " + quantidadeEstoque[testeIndice])
		         
		    } senao {

				escreva ("Unidade Invalida!")
				
		    }   		   
		 }
	}
			           
	funcao removerEstoque() {
	    
	     escreva("Qual indice você quer remover uma quantidade? ")
	     leia(entradaIndice)
	      
	      enquanto (entradaIndice == "") {

			se (entradaIndice == "") {
				
				escreva("Índice Inválido!")
			
				escreva("\nPressione enter para voltar ao menu: ")
				leia(teclaEnter)
				limpa()
				retorne
			}
	
	      }
		
		 testeIndice = tp.cadeia_para_inteiro(entradaIndice, 10)
	      
	     se (testeIndice <= -1 ou testeIndice > contador) {
	          
	          escreva("Indice Inválido!")
	          
	      } senao {
	          
	          escreva("Quantas unidades deseja remover? ")
	          leia(entradaQuantidade)

			enquanto (entradaQuantidade == "") {
		            
		            se (entradaQuantidade == "") {
		                
		                escreva ("Unidade Inválida!")
		                      
		            }
					 escreva("\nDigite a unidade válida: ")
          			 leia(entradaQuantidade)
		        }
		
		         quantidadeProduto = tp.cadeia_para_inteiro(entradaQuantidade, 10)

				se (quantidadeProduto >= 0) {

		         quantidadeEstoque[testeIndice] -= quantidadeProduto 
		
		         escreva("Quantidade: " + quantidadeEstoque[testeIndice])
		         
		    } senao {

				escreva ("Unidade Invalida!")

		    }	   
		}
	}
	
	funcao saldoEstoque() {
	    
	    contador1 = -1
	    
	    para (inteiro i = 0; i <= contador; i++) {
	        
	        se (produtos[i] == "") {
	            contador1++
	        } senao {
	        
	            escreva("Saldo dos Produtos\n\n")
	            escreva(produtos[i] + ": " + quantidadeEstoque[i] + "\n")
	            
	        }
	        
	        se (contador1 == contador) {
			        
			    escreva("Nenhum produto cadastrado\n")
				
			}
	        
	    }
	}
     
	funcao enter() {

		escreva ("Precione enter para voltar ao menu: ")
		leia(teclaEnter)
		
	}
	
}
